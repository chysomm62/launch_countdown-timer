{"version":3,"sources":["images/icon-facebook.svg","images/icon-instagram.svg","images/icon-pinterest.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","timerDays","setDays","timerHours","setHours","timerMinutes","setMinutes","timerSeconds","setSeconds","interval","useRef","useEffect","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","className","src","facebook","alt","instagram","pinterest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,G,MAAA,IAA0B,2CCA1B,MAA0B,2CCA1B,MAA0B,2C,OCoH1BA,MA9Gf,WACE,MAA6BC,mBAAS,MAAtC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA+BF,mBAAS,MAAxC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAmCJ,mBAAS,MAA5C,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAmCN,mBAAS,MAA5C,mBAAOO,EAAP,KAAqBC,EAArB,KAEIC,EAAWC,mBAoCf,OAPAC,qBAAU,WAER,OA7BiB,WACjB,IAAMC,EAAgB,IAAIC,KAAK,4BAA4BC,UAE3DL,EAAWM,aAAY,WACrB,IAAMC,GAAM,IAAIH,MAAOC,UACjBG,EAAWL,EAAgBI,EAE3BE,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAChBH,EAAQ,MAAT,MAEIK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAElDA,EAAW,EAEbO,cAAcf,EAASgB,UAGvBvB,EAAQgB,GACRd,EAASiB,GACTf,EAAWgB,GACXd,EAAWe,MAEZ,KAIHG,GACO,WACLF,cAAcf,EAASgB,aAKzB,sBAAKE,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,8BACE,yDAEF,gCACE,oCACE,gCACE,qBAAKA,UAAU,cACf,8BACE,4BAAI1B,SAGR,4BACE,8CAGJ,oCACE,gCACE,qBAAK0B,UAAU,cACf,8BACE,4BAAIxB,SAGR,4BACE,+CAGJ,oCACE,gCACE,qBAAKwB,UAAU,cACf,8BACE,4BAAItB,SAGR,4BACE,iDAGJ,oCACE,gCACE,qBAAKsB,UAAU,cACf,8BACE,4BAAIpB,SAGR,4BACE,uDAKR,mCACE,8BACE,qBAAKqB,IAAKC,EAAUC,IAAI,OAE1B,8BACE,qBAAKF,IAAKG,EAAWD,IAAI,OAE3B,8BACE,qBAAKF,IAAKI,EAAWF,IAAI,cCjGpBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2cca0123.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-facebook.a9208377.svg\";","export default __webpack_public_path__ + \"static/media/icon-instagram.b94ff26a.svg\";","export default __webpack_public_path__ + \"static/media/icon-pinterest.ea0db8e7.svg\";","import \"./App.css\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport facebook from \"./images/icon-facebook.svg\";\nimport instagram from \"./images/icon-instagram.svg\";\nimport pinterest from \"./images/icon-pinterest.svg\";\n\nfunction App() {\n  const [timerDays, setDays] = useState(\"00\");\n  const [timerHours, setHours] = useState(\"00\");\n  const [timerMinutes, setMinutes] = useState(\"00\");\n  const [timerSeconds, setSeconds] = useState(\"00\");\n\n  let interval = useRef();\n\n  const startTimer = () => {\n    const countdownDate = new Date(\"January 1, 2022 00:00:00\").getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = countdownDate - now;\n\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        // stop timer\n        clearInterval(interval.current);\n      } else {\n        // update timer\n        setDays(days);\n        setHours(hours);\n        setMinutes(minutes);\n        setSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div>\n          <h1> We're launching soon</h1>\n        </div>\n        <div>\n          <section>\n            <div>\n              <div className=\"empty-div\"></div>\n              <div>\n                <p>{timerDays}</p>\n              </div>\n            </div>\n            <p>\n              <small>Days</small>\n            </p>\n          </section>\n          <section>\n            <div>\n              <div className=\"empty-div\"></div>\n              <div>\n                <p>{timerHours}</p>\n              </div>\n            </div>\n            <p>\n              <small>Hours</small>\n            </p>\n          </section>\n          <section>\n            <div>\n              <div className=\"empty-div\"></div>\n              <div>\n                <p>{timerMinutes}</p>\n              </div>\n            </div>\n            <p>\n              <small>Minutes</small>\n            </p>\n          </section>\n          <section>\n            <div>\n              <div className=\"empty-div\"></div>\n              <div>\n                <p>{timerSeconds}</p>\n              </div>\n            </div>\n            <p>\n              <small>Seconds</small>\n            </p>\n          </section>\n        </div>\n      </div>\n      <footer>\n        <div>\n          <img src={facebook} alt=\"\" />\n        </div>\n        <div>\n          <img src={instagram} alt=\"\" />\n        </div>\n        <div>\n          <img src={pinterest} alt=\"\" />\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}